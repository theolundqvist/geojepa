// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.proto

#include "schema.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
      template <typename>
PROTOBUF_CONSTEXPR Group_TagsEntry_DoNotUse::Group_TagsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct Group_TagsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Group_TagsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Group_TagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Group_TagsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Group_TagsEntry_DoNotUseDefaultTypeInternal _Group_TagsEntry_DoNotUse_default_instance_;

inline constexpr Geometry_Point::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lat_{0},
        lon_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Geometry_Point::Geometry_Point(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Geometry_PointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Geometry_PointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Geometry_PointDefaultTypeInternal() {}
  union {
    Geometry_Point _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Geometry_PointDefaultTypeInternal _Geometry_Point_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Feature_TagsEntry_DoNotUse::Feature_TagsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct Feature_TagsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Feature_TagsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Feature_TagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Feature_TagsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Feature_TagsEntry_DoNotUseDefaultTypeInternal _Feature_TagsEntry_DoNotUse_default_instance_;

inline constexpr Group::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        feature_indices_{},
        _feature_indices_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Group::Group(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupDefaultTypeInternal() {}
  union {
    Group _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupDefaultTypeInternal _Group_default_instance_;

inline constexpr Geometry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : points_{},
        is_closed_{false},
        inner_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Geometry::Geometry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GeometryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeometryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeometryDefaultTypeInternal() {}
  union {
    Geometry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeometryDefaultTypeInternal _Geometry_default_instance_;

inline constexpr Feature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        geometry_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Feature::Feature(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeatureDefaultTypeInternal() {}
  union {
    Feature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeatureDefaultTypeInternal _Feature_default_instance_;

inline constexpr Tile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : features_{},
        groups_{},
        zoom_{0},
        x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Tile::Tile(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TileDefaultTypeInternal() {}
  union {
    Tile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TileDefaultTypeInternal _Tile_default_instance_;

inline constexpr TileGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tiles_{},
        zoom_{0},
        x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TileGroup::TileGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TileGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TileGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TileGroupDefaultTypeInternal() {}
  union {
    TileGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TileGroupDefaultTypeInternal _TileGroup_default_instance_;
static ::_pb::Metadata file_level_metadata_schema_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_schema_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_schema_2eproto = nullptr;
const ::uint32_t TableStruct_schema_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Geometry_Point, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Geometry_Point, _impl_.lat_),
    PROTOBUF_FIELD_OFFSET(::Geometry_Point, _impl_.lon_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Geometry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Geometry, _impl_.points_),
    PROTOBUF_FIELD_OFFSET(::Geometry, _impl_.is_closed_),
    PROTOBUF_FIELD_OFFSET(::Geometry, _impl_.inner_),
    PROTOBUF_FIELD_OFFSET(::Feature_TagsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::Feature_TagsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Feature_TagsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::Feature_TagsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::Feature, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Feature, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Feature, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::Feature, _impl_.geometry_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::Group_TagsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::Group_TagsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Group_TagsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::Group_TagsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Group, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Group, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::Group, _impl_.feature_indices_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Tile, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Tile, _impl_.zoom_),
    PROTOBUF_FIELD_OFFSET(::Tile, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::Tile, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::Tile, _impl_.features_),
    PROTOBUF_FIELD_OFFSET(::Tile, _impl_.groups_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TileGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TileGroup, _impl_.zoom_),
    PROTOBUF_FIELD_OFFSET(::TileGroup, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::TileGroup, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::TileGroup, _impl_.tiles_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Geometry_Point)},
        {10, -1, -1, sizeof(::Geometry)},
        {21, 31, -1, sizeof(::Feature_TagsEntry_DoNotUse)},
        {33, 43, -1, sizeof(::Feature)},
        {45, 55, -1, sizeof(::Group_TagsEntry_DoNotUse)},
        {57, -1, -1, sizeof(::Group)},
        {67, -1, -1, sizeof(::Tile)},
        {80, -1, -1, sizeof(::TileGroup)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_Geometry_Point_default_instance_._instance,
    &::_Geometry_default_instance_._instance,
    &::_Feature_TagsEntry_DoNotUse_default_instance_._instance,
    &::_Feature_default_instance_._instance,
    &::_Group_TagsEntry_DoNotUse_default_instance_._instance,
    &::_Group_default_instance_._instance,
    &::_Tile_default_instance_._instance,
    &::_TileGroup_default_instance_._instance,
};
const char descriptor_table_protodef_schema_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014schema.proto\"p\n\010Geometry\022\037\n\006points\030\001 \003"
    "(\0132\017.Geometry.Point\022\021\n\tis_closed\030\002 \001(\010\022\r"
    "\n\005inner\030\003 \001(\010\032!\n\005Point\022\013\n\003lat\030\001 \001(\002\022\013\n\003l"
    "on\030\002 \001(\002\"u\n\007Feature\022 \n\004tags\030\001 \003(\0132\022.Feat"
    "ure.TagsEntry\022\033\n\010geometry\030\002 \001(\0132\t.Geomet"
    "ry\032+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\"m\n\005Group\022\036\n\004tags\030\001 \003(\0132\020.Group.T"
    "agsEntry\022\027\n\017feature_indices\030\002 \003(\005\032+\n\tTag"
    "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"^"
    "\n\004Tile\022\014\n\004zoom\030\001 \001(\005\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001"
    "(\005\022\032\n\010features\030\004 \003(\0132\010.Feature\022\026\n\006groups"
    "\030\005 \003(\0132\006.Group\"E\n\tTileGroup\022\014\n\004zoom\030\001 \001("
    "\005\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\024\n\005tiles\030\004 \003(\0132\005"
    ".Tileb\006proto3"
};
static ::absl::once_flag descriptor_table_schema_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_schema_2eproto = {
    false,
    false,
    533,
    descriptor_table_protodef_schema_2eproto,
    "schema.proto",
    &descriptor_table_schema_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_schema_2eproto::offsets,
    file_level_metadata_schema_2eproto,
    file_level_enum_descriptors_schema_2eproto,
    file_level_service_descriptors_schema_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_schema_2eproto_getter() {
  return &descriptor_table_schema_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_schema_2eproto(&descriptor_table_schema_2eproto);
// ===================================================================

class Geometry_Point::_Internal {
 public:
};

Geometry_Point::Geometry_Point(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Geometry.Point)
}
Geometry_Point::Geometry_Point(
    ::google::protobuf::Arena* arena, const Geometry_Point& from)
    : Geometry_Point(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Geometry_Point::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Geometry_Point::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
Geometry_Point::~Geometry_Point() {
  // @@protoc_insertion_point(destructor:Geometry.Point)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Geometry_Point::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Geometry_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:Geometry.Point)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lon_) -
      reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Geometry_Point::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Geometry_Point::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Geometry_Point_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float lon = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Geometry_Point, _impl_.lon_)}},
    // float lat = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Geometry_Point, _impl_.lat_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float lat = 1;
    {PROTOBUF_FIELD_OFFSET(Geometry_Point, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float lon = 2;
    {PROTOBUF_FIELD_OFFSET(Geometry_Point, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Geometry_Point::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Geometry.Point)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float lat = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lat = this->_internal_lat();
  ::uint32_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_lat(), target);
  }

  // float lon = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lon = this->_internal_lon();
  ::uint32_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_lon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Geometry.Point)
  return target;
}

::size_t Geometry_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Geometry.Point)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float lat = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lat = this->_internal_lat();
  ::uint32_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    total_size += 5;
  }

  // float lon = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lon = this->_internal_lon();
  ::uint32_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Geometry_Point::_class_data_ = {
    Geometry_Point::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Geometry_Point::GetClassData() const {
  return &_class_data_;
}

void Geometry_Point::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Geometry_Point*>(&to_msg);
  auto& from = static_cast<const Geometry_Point&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Geometry.Point)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lat = from._internal_lat();
  ::uint32_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    _this->_internal_set_lat(from._internal_lat());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_lon = from._internal_lon();
  ::uint32_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    _this->_internal_set_lon(from._internal_lon());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Geometry_Point::CopyFrom(const Geometry_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Geometry.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Geometry_Point::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Geometry_Point::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Geometry_Point::InternalSwap(Geometry_Point* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Geometry_Point, _impl_.lon_)
      + sizeof(Geometry_Point::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(Geometry_Point, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata Geometry_Point::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[0]);
}
// ===================================================================

class Geometry::_Internal {
 public:
};

Geometry::Geometry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Geometry)
}
inline PROTOBUF_NDEBUG_INLINE Geometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : points_{visibility, arena, from.points_},
        _cached_size_{0} {}

Geometry::Geometry(
    ::google::protobuf::Arena* arena,
    const Geometry& from)
    : ::google::protobuf::Message(arena) {
  Geometry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_closed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_closed_),
           offsetof(Impl_, inner_) -
               offsetof(Impl_, is_closed_) +
               sizeof(Impl_::inner_));

  // @@protoc_insertion_point(copy_constructor:Geometry)
}
inline PROTOBUF_NDEBUG_INLINE Geometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : points_{visibility, arena},
        _cached_size_{0} {}

inline void Geometry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_closed_),
           0,
           offsetof(Impl_, inner_) -
               offsetof(Impl_, is_closed_) +
               sizeof(Impl_::inner_));
}
Geometry::~Geometry() {
  // @@protoc_insertion_point(destructor:Geometry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Geometry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Geometry::Clear() {
// @@protoc_insertion_point(message_clear_start:Geometry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  ::memset(&_impl_.is_closed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.inner_) -
      reinterpret_cast<char*>(&_impl_.is_closed_)) + sizeof(_impl_.inner_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Geometry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Geometry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Geometry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Geometry.Point points = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Geometry, _impl_.points_)}},
    // bool is_closed = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Geometry, _impl_.is_closed_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Geometry, _impl_.is_closed_)}},
    // bool inner = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Geometry, _impl_.inner_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Geometry, _impl_.inner_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Geometry.Point points = 1;
    {PROTOBUF_FIELD_OFFSET(Geometry, _impl_.points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_closed = 2;
    {PROTOBUF_FIELD_OFFSET(Geometry, _impl_.is_closed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool inner = 3;
    {PROTOBUF_FIELD_OFFSET(Geometry, _impl_.inner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Geometry_Point>()},
  }}, {{
  }},
};

::uint8_t* Geometry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Geometry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Geometry.Point points = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_points().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool is_closed = 2;
  if (this->_internal_is_closed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_closed(), target);
  }

  // bool inner = 3;
  if (this->_internal_inner() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_inner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Geometry)
  return target;
}

::size_t Geometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Geometry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Geometry.Point points = 1;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->_internal_points()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bool is_closed = 2;
  if (this->_internal_is_closed() != 0) {
    total_size += 2;
  }

  // bool inner = 3;
  if (this->_internal_inner() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Geometry::_class_data_ = {
    Geometry::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Geometry::GetClassData() const {
  return &_class_data_;
}

void Geometry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Geometry*>(&to_msg);
  auto& from = static_cast<const Geometry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Geometry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  if (from._internal_is_closed() != 0) {
    _this->_internal_set_is_closed(from._internal_is_closed());
  }
  if (from._internal_inner() != 0) {
    _this->_internal_set_inner(from._internal_inner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Geometry::CopyFrom(const Geometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Geometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Geometry::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Geometry::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Geometry::InternalSwap(Geometry* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Geometry, _impl_.inner_)
      + sizeof(Geometry::_impl_.inner_)
      - PROTOBUF_FIELD_OFFSET(Geometry, _impl_.is_closed_)>(
          reinterpret_cast<char*>(&_impl_.is_closed_),
          reinterpret_cast<char*>(&other->_impl_.is_closed_));
}

::google::protobuf::Metadata Geometry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[1]);
}
// ===================================================================

Feature_TagsEntry_DoNotUse::Feature_TagsEntry_DoNotUse() {}
Feature_TagsEntry_DoNotUse::Feature_TagsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata Feature_TagsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[2]);
}
// ===================================================================

class Feature::_Internal {
 public:
  using HasBits = decltype(std::declval<Feature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Feature, _impl_._has_bits_);
  static const ::Geometry& geometry(const Feature* msg);
  static void set_has_geometry(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Geometry& Feature::_Internal::geometry(const Feature* msg) {
  return *msg->_impl_.geometry_;
}
Feature::Feature(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Feature)
}
inline PROTOBUF_NDEBUG_INLINE Feature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_} {}

Feature::Feature(
    ::google::protobuf::Arena* arena,
    const Feature& from)
    : ::google::protobuf::Message(arena) {
  Feature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.geometry_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::Geometry>(arena, *from._impl_.geometry_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:Feature)
}
inline PROTOBUF_NDEBUG_INLINE Feature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena} {}

inline void Feature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.geometry_ = {};
}
Feature::~Feature() {
  // @@protoc_insertion_point(destructor:Feature)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Feature::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.geometry_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:Feature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.geometry_ != nullptr);
    _impl_.geometry_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Feature::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 20, 2> Feature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Feature, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Feature_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Geometry geometry = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(Feature, _impl_.geometry_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> tags = 1;
    {PROTOBUF_FIELD_OFFSET(Feature, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .Geometry geometry = 2;
    {PROTOBUF_FIELD_OFFSET(Feature, _impl_.geometry_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Feature()._impl_.tags_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::Geometry>()},
  }}, {{
    "\7\4\0\0\0\0\0\0"
    "Feature"
    "tags"
  }},
};

::uint8_t* Feature::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Feature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> tags = 1;
  if (!_internal_tags().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_tags();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Feature.tags");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Feature.tags");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Feature.tags");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Feature.tags");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Geometry geometry = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::geometry(this),
        _Internal::geometry(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Feature)
  return target;
}

::size_t Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Feature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags_size());
  for (const auto& entry : _internal_tags()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // .Geometry geometry = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.geometry_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Feature::_class_data_ = {
    Feature::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Feature::GetClassData() const {
  return &_class_data_;
}

void Feature::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Feature*>(&to_msg);
  auto& from = static_cast<const Feature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Feature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_geometry()->::Geometry::MergeFrom(
        from._internal_geometry());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Feature::CopyFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Feature::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Feature::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Feature::InternalSwap(Feature* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  swap(_impl_.geometry_, other->_impl_.geometry_);
}

::google::protobuf::Metadata Feature::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[3]);
}
// ===================================================================

Group_TagsEntry_DoNotUse::Group_TagsEntry_DoNotUse() {}
Group_TagsEntry_DoNotUse::Group_TagsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata Group_TagsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[4]);
}
// ===================================================================

class Group::_Internal {
 public:
};

Group::Group(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Group)
}
inline PROTOBUF_NDEBUG_INLINE Group::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tags_{visibility, arena, from.tags_},
        feature_indices_{visibility, arena, from.feature_indices_},
        _feature_indices_cached_byte_size_{0},
        _cached_size_{0} {}

Group::Group(
    ::google::protobuf::Arena* arena,
    const Group& from)
    : ::google::protobuf::Message(arena) {
  Group* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Group)
}
inline PROTOBUF_NDEBUG_INLINE Group::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tags_{visibility, arena},
        feature_indices_{visibility, arena},
        _feature_indices_cached_byte_size_{0},
        _cached_size_{0} {}

inline void Group::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Group::~Group() {
  // @@protoc_insertion_point(destructor:Group)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Group::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:Group)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.feature_indices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Group::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 18, 2> Group::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Group_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 feature_indices = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Group, _impl_.feature_indices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> tags = 1;
    {PROTOBUF_FIELD_OFFSET(Group, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated int32 feature_indices = 2;
    {PROTOBUF_FIELD_OFFSET(Group, _impl_.feature_indices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Group()._impl_.tags_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\5\4\0\0\0\0\0\0"
    "Group"
    "tags"
  }},
};

::uint8_t* Group::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Group)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> tags = 1;
  if (!_internal_tags().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_tags();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Group.tags");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Group.tags");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Group.tags");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Group.tags");
      }
    }
  }

  // repeated int32 feature_indices = 2;
  {
    int byte_size = _impl_._feature_indices_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_feature_indices(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Group)
  return target;
}

::size_t Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Group)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags_size());
  for (const auto& entry : _internal_tags()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated int32 feature_indices = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_feature_indices())
    ;
    _impl_._feature_indices_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Group::_class_data_ = {
    Group::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Group::GetClassData() const {
  return &_class_data_;
}

void Group::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Group*>(&to_msg);
  auto& from = static_cast<const Group&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Group)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  _this->_internal_mutable_feature_indices()->MergeFrom(from._internal_feature_indices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Group::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Group::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Group::InternalSwap(Group* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.feature_indices_.InternalSwap(&other->_impl_.feature_indices_);
}

::google::protobuf::Metadata Group::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[5]);
}
// ===================================================================

class Tile::_Internal {
 public:
};

Tile::Tile(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Tile)
}
inline PROTOBUF_NDEBUG_INLINE Tile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : features_{visibility, arena, from.features_},
        groups_{visibility, arena, from.groups_},
        _cached_size_{0} {}

Tile::Tile(
    ::google::protobuf::Arena* arena,
    const Tile& from)
    : ::google::protobuf::Message(arena) {
  Tile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, zoom_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, zoom_),
           offsetof(Impl_, y_) -
               offsetof(Impl_, zoom_) +
               sizeof(Impl_::y_));

  // @@protoc_insertion_point(copy_constructor:Tile)
}
inline PROTOBUF_NDEBUG_INLINE Tile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : features_{visibility, arena},
        groups_{visibility, arena},
        _cached_size_{0} {}

inline void Tile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, zoom_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, zoom_) +
               sizeof(Impl_::y_));
}
Tile::~Tile() {
  // @@protoc_insertion_point(destructor:Tile)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Tile::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Tile::Clear() {
// @@protoc_insertion_point(message_clear_start:Tile)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.features_.Clear();
  _impl_.groups_.Clear();
  ::memset(&_impl_.zoom_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.zoom_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Tile::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> Tile::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Tile_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 zoom = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Tile, _impl_.zoom_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Tile, _impl_.zoom_)}},
    // int32 x = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Tile, _impl_.x_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Tile, _impl_.x_)}},
    // int32 y = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Tile, _impl_.y_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Tile, _impl_.y_)}},
    // repeated .Feature features = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Tile, _impl_.features_)}},
    // repeated .Group groups = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Tile, _impl_.groups_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 zoom = 1;
    {PROTOBUF_FIELD_OFFSET(Tile, _impl_.zoom_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 x = 2;
    {PROTOBUF_FIELD_OFFSET(Tile, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 3;
    {PROTOBUF_FIELD_OFFSET(Tile, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .Feature features = 4;
    {PROTOBUF_FIELD_OFFSET(Tile, _impl_.features_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Group groups = 5;
    {PROTOBUF_FIELD_OFFSET(Tile, _impl_.groups_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Feature>()},
    {::_pbi::TcParser::GetTable<::Group>()},
  }}, {{
  }},
};

::uint8_t* Tile::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 zoom = 1;
  if (this->_internal_zoom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_zoom(), target);
  }

  // int32 x = 2;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 3;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_y(), target);
  }

  // repeated .Feature features = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_features_size()); i < n; i++) {
    const auto& repfield = this->_internal_features().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .Group groups = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_groups_size()); i < n; i++) {
    const auto& repfield = this->_internal_groups().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tile)
  return target;
}

::size_t Tile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Feature features = 4;
  total_size += 1UL * this->_internal_features_size();
  for (const auto& msg : this->_internal_features()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .Group groups = 5;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->_internal_groups()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 zoom = 1;
  if (this->_internal_zoom() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_zoom());
  }

  // int32 x = 2;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 3;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Tile::_class_data_ = {
    Tile::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Tile::GetClassData() const {
  return &_class_data_;
}

void Tile::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Tile*>(&to_msg);
  auto& from = static_cast<const Tile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Tile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_features()->MergeFrom(
      from._internal_features());
  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  if (from._internal_zoom() != 0) {
    _this->_internal_set_zoom(from._internal_zoom());
  }
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Tile::CopyFrom(const Tile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Tile::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Tile::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Tile::InternalSwap(Tile* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.features_.InternalSwap(&other->_impl_.features_);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tile, _impl_.y_)
      + sizeof(Tile::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Tile, _impl_.zoom_)>(
          reinterpret_cast<char*>(&_impl_.zoom_),
          reinterpret_cast<char*>(&other->_impl_.zoom_));
}

::google::protobuf::Metadata Tile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[6]);
}
// ===================================================================

class TileGroup::_Internal {
 public:
};

TileGroup::TileGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TileGroup)
}
inline PROTOBUF_NDEBUG_INLINE TileGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tiles_{visibility, arena, from.tiles_},
        _cached_size_{0} {}

TileGroup::TileGroup(
    ::google::protobuf::Arena* arena,
    const TileGroup& from)
    : ::google::protobuf::Message(arena) {
  TileGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, zoom_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, zoom_),
           offsetof(Impl_, y_) -
               offsetof(Impl_, zoom_) +
               sizeof(Impl_::y_));

  // @@protoc_insertion_point(copy_constructor:TileGroup)
}
inline PROTOBUF_NDEBUG_INLINE TileGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tiles_{visibility, arena},
        _cached_size_{0} {}

inline void TileGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, zoom_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, zoom_) +
               sizeof(Impl_::y_));
}
TileGroup::~TileGroup() {
  // @@protoc_insertion_point(destructor:TileGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TileGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TileGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:TileGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tiles_.Clear();
  ::memset(&_impl_.zoom_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.zoom_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TileGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> TileGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TileGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .Tile tiles = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.tiles_)}},
    // int32 zoom = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TileGroup, _impl_.zoom_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.zoom_)}},
    // int32 x = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TileGroup, _impl_.x_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.x_)}},
    // int32 y = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TileGroup, _impl_.y_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 zoom = 1;
    {PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.zoom_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 x = 2;
    {PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 3;
    {PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .Tile tiles = 4;
    {PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.tiles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Tile>()},
  }}, {{
  }},
};

::uint8_t* TileGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TileGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 zoom = 1;
  if (this->_internal_zoom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_zoom(), target);
  }

  // int32 x = 2;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 3;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_y(), target);
  }

  // repeated .Tile tiles = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tiles_size()); i < n; i++) {
    const auto& repfield = this->_internal_tiles().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TileGroup)
  return target;
}

::size_t TileGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TileGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Tile tiles = 4;
  total_size += 1UL * this->_internal_tiles_size();
  for (const auto& msg : this->_internal_tiles()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 zoom = 1;
  if (this->_internal_zoom() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_zoom());
  }

  // int32 x = 2;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 3;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TileGroup::_class_data_ = {
    TileGroup::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TileGroup::GetClassData() const {
  return &_class_data_;
}

void TileGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TileGroup*>(&to_msg);
  auto& from = static_cast<const TileGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TileGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tiles()->MergeFrom(
      from._internal_tiles());
  if (from._internal_zoom() != 0) {
    _this->_internal_set_zoom(from._internal_zoom());
  }
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TileGroup::CopyFrom(const TileGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TileGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TileGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TileGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TileGroup::InternalSwap(TileGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tiles_.InternalSwap(&other->_impl_.tiles_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.y_)
      + sizeof(TileGroup::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(TileGroup, _impl_.zoom_)>(
          reinterpret_cast<char*>(&_impl_.zoom_),
          reinterpret_cast<char*>(&other->_impl_.zoom_));
}

::google::protobuf::Metadata TileGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
