// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unprocessed_tile_group.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_unprocessed_5ftile_5fgroup_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_unprocessed_5ftile_5fgroup_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_unprocessed_5ftile_5fgroup_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_unprocessed_5ftile_5fgroup_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_unprocessed_5ftile_5fgroup_2eproto;
namespace unprocessed {
class Feature;
struct FeatureDefaultTypeInternal;
extern FeatureDefaultTypeInternal _Feature_default_instance_;
class Feature_TagsEntry_DoNotUse;
struct Feature_TagsEntry_DoNotUseDefaultTypeInternal;
extern Feature_TagsEntry_DoNotUseDefaultTypeInternal _Feature_TagsEntry_DoNotUse_default_instance_;
class Geometry;
struct GeometryDefaultTypeInternal;
extern GeometryDefaultTypeInternal _Geometry_default_instance_;
class Geometry_Point;
struct Geometry_PointDefaultTypeInternal;
extern Geometry_PointDefaultTypeInternal _Geometry_Point_default_instance_;
class Group;
struct GroupDefaultTypeInternal;
extern GroupDefaultTypeInternal _Group_default_instance_;
class Group_TagsEntry_DoNotUse;
struct Group_TagsEntry_DoNotUseDefaultTypeInternal;
extern Group_TagsEntry_DoNotUseDefaultTypeInternal _Group_TagsEntry_DoNotUse_default_instance_;
class Tile;
struct TileDefaultTypeInternal;
extern TileDefaultTypeInternal _Tile_default_instance_;
class TileGroup;
struct TileGroupDefaultTypeInternal;
extern TileGroupDefaultTypeInternal _TileGroup_default_instance_;
}  // namespace unprocessed
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace unprocessed {

// ===================================================================


// -------------------------------------------------------------------

class Group_TagsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Group_TagsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Group_TagsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Group_TagsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Group_TagsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Group_TagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Group_TagsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Group_TagsEntry_DoNotUse*>(
        &_Group_TagsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "unprocessed.Group.TagsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "unprocessed.Group.TagsEntry.value");
 }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class Geometry_Point final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:unprocessed.Geometry.Point) */ {
 public:
  inline Geometry_Point() : Geometry_Point(nullptr) {}
  ~Geometry_Point() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Geometry_Point(::google::protobuf::internal::ConstantInitialized);

  inline Geometry_Point(const Geometry_Point& from)
      : Geometry_Point(nullptr, from) {}
  Geometry_Point(Geometry_Point&& from) noexcept
    : Geometry_Point() {
    *this = ::std::move(from);
  }

  inline Geometry_Point& operator=(const Geometry_Point& from) {
    CopyFrom(from);
    return *this;
  }
  inline Geometry_Point& operator=(Geometry_Point&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Geometry_Point& default_instance() {
    return *internal_default_instance();
  }
  static inline const Geometry_Point* internal_default_instance() {
    return reinterpret_cast<const Geometry_Point*>(
               &_Geometry_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Geometry_Point& a, Geometry_Point& b) {
    a.Swap(&b);
  }
  inline void Swap(Geometry_Point* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Geometry_Point* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Geometry_Point* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Geometry_Point>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Geometry_Point& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Geometry_Point& from) {
    Geometry_Point::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Geometry_Point* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "unprocessed.Geometry.Point";
  }
  protected:
  explicit Geometry_Point(::google::protobuf::Arena* arena);
  Geometry_Point(::google::protobuf::Arena* arena, const Geometry_Point& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatFieldNumber = 1,
    kLonFieldNumber = 2,
  };
  // float lat = 1;
  void clear_lat() ;
  float lat() const;
  void set_lat(float value);

  private:
  float _internal_lat() const;
  void _internal_set_lat(float value);

  public:
  // float lon = 2;
  void clear_lon() ;
  float lon() const;
  void set_lon(float value);

  private:
  float _internal_lon() const;
  void _internal_set_lon(float value);

  public:
  // @@protoc_insertion_point(class_scope:unprocessed.Geometry.Point)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float lat_;
    float lon_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};// -------------------------------------------------------------------

class Feature_TagsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Feature_TagsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Feature_TagsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Feature_TagsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Feature_TagsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Feature_TagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Feature_TagsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Feature_TagsEntry_DoNotUse*>(
        &_Feature_TagsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "unprocessed.Feature.TagsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "unprocessed.Feature.TagsEntry.value");
 }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};
// -------------------------------------------------------------------

class Group final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:unprocessed.Group) */ {
 public:
  inline Group() : Group(nullptr) {}
  ~Group() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Group(::google::protobuf::internal::ConstantInitialized);

  inline Group(const Group& from)
      : Group(nullptr, from) {}
  Group(Group&& from) noexcept
    : Group() {
    *this = ::std::move(from);
  }

  inline Group& operator=(const Group& from) {
    CopyFrom(from);
    return *this;
  }
  inline Group& operator=(Group&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Group& default_instance() {
    return *internal_default_instance();
  }
  static inline const Group* internal_default_instance() {
    return reinterpret_cast<const Group*>(
               &_Group_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Group& a, Group& b) {
    a.Swap(&b);
  }
  inline void Swap(Group* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Group* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Group* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Group>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Group& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Group& from) {
    Group::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Group* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "unprocessed.Group";
  }
  protected:
  explicit Group(::google::protobuf::Arena* arena);
  Group(::google::protobuf::Arena* arena, const Group& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 1,
    kFeatureIndicesFieldNumber = 2,
  };
  // map<string, string> tags = 1;
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  const ::google::protobuf::Map<std::string, std::string>& tags() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_tags();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_tags() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_tags();

  public:
  // repeated int32 feature_indices = 2;
  int feature_indices_size() const;
  private:
  int _internal_feature_indices_size() const;

  public:
  void clear_feature_indices() ;
  ::int32_t feature_indices(int index) const;
  void set_feature_indices(int index, ::int32_t value);
  void add_feature_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& feature_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_feature_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_feature_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_feature_indices();

  public:
  // @@protoc_insertion_point(class_scope:unprocessed.Group)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<Group_TagsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        tags_;
    ::google::protobuf::RepeatedField<::int32_t> feature_indices_;
    mutable ::google::protobuf::internal::CachedSize _feature_indices_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};// -------------------------------------------------------------------

class Geometry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:unprocessed.Geometry) */ {
 public:
  inline Geometry() : Geometry(nullptr) {}
  ~Geometry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Geometry(::google::protobuf::internal::ConstantInitialized);

  inline Geometry(const Geometry& from)
      : Geometry(nullptr, from) {}
  Geometry(Geometry&& from) noexcept
    : Geometry() {
    *this = ::std::move(from);
  }

  inline Geometry& operator=(const Geometry& from) {
    CopyFrom(from);
    return *this;
  }
  inline Geometry& operator=(Geometry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Geometry& default_instance() {
    return *internal_default_instance();
  }
  static inline const Geometry* internal_default_instance() {
    return reinterpret_cast<const Geometry*>(
               &_Geometry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Geometry& a, Geometry& b) {
    a.Swap(&b);
  }
  inline void Swap(Geometry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Geometry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Geometry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Geometry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Geometry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Geometry& from) {
    Geometry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Geometry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "unprocessed.Geometry";
  }
  protected:
  explicit Geometry(::google::protobuf::Arena* arena);
  Geometry(::google::protobuf::Arena* arena, const Geometry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Point = Geometry_Point;

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 1,
    kIsClosedFieldNumber = 2,
    kInnerFieldNumber = 3,
  };
  // repeated .unprocessed.Geometry.Point points = 1;
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::unprocessed::Geometry_Point* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::unprocessed::Geometry_Point >*
      mutable_points();
  private:
  const ::google::protobuf::RepeatedPtrField<::unprocessed::Geometry_Point>& _internal_points() const;
  ::google::protobuf::RepeatedPtrField<::unprocessed::Geometry_Point>* _internal_mutable_points();
  public:
  const ::unprocessed::Geometry_Point& points(int index) const;
  ::unprocessed::Geometry_Point* add_points();
  const ::google::protobuf::RepeatedPtrField< ::unprocessed::Geometry_Point >&
      points() const;
  // bool is_closed = 2;
  void clear_is_closed() ;
  bool is_closed() const;
  void set_is_closed(bool value);

  private:
  bool _internal_is_closed() const;
  void _internal_set_is_closed(bool value);

  public:
  // bool inner = 3;
  void clear_inner() ;
  bool inner() const;
  void set_inner(bool value);

  private:
  bool _internal_inner() const;
  void _internal_set_inner(bool value);

  public:
  // @@protoc_insertion_point(class_scope:unprocessed.Geometry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::unprocessed::Geometry_Point > points_;
    bool is_closed_;
    bool inner_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};// -------------------------------------------------------------------

class Feature final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:unprocessed.Feature) */ {
 public:
  inline Feature() : Feature(nullptr) {}
  ~Feature() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Feature(::google::protobuf::internal::ConstantInitialized);

  inline Feature(const Feature& from)
      : Feature(nullptr, from) {}
  Feature(Feature&& from) noexcept
    : Feature() {
    *this = ::std::move(from);
  }

  inline Feature& operator=(const Feature& from) {
    CopyFrom(from);
    return *this;
  }
  inline Feature& operator=(Feature&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Feature& default_instance() {
    return *internal_default_instance();
  }
  static inline const Feature* internal_default_instance() {
    return reinterpret_cast<const Feature*>(
               &_Feature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Feature& a, Feature& b) {
    a.Swap(&b);
  }
  inline void Swap(Feature* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Feature* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Feature* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Feature>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Feature& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Feature& from) {
    Feature::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Feature* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "unprocessed.Feature";
  }
  protected:
  explicit Feature(::google::protobuf::Arena* arena);
  Feature(::google::protobuf::Arena* arena, const Feature& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 1,
    kGeometryFieldNumber = 2,
  };
  // map<string, string> tags = 1;
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  const ::google::protobuf::Map<std::string, std::string>& tags() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_tags();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_tags() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_tags();

  public:
  // .unprocessed.Geometry geometry = 2;
  bool has_geometry() const;
  void clear_geometry() ;
  const ::unprocessed::Geometry& geometry() const;
  PROTOBUF_NODISCARD ::unprocessed::Geometry* release_geometry();
  ::unprocessed::Geometry* mutable_geometry();
  void set_allocated_geometry(::unprocessed::Geometry* value);
  void unsafe_arena_set_allocated_geometry(::unprocessed::Geometry* value);
  ::unprocessed::Geometry* unsafe_arena_release_geometry();

  private:
  const ::unprocessed::Geometry& _internal_geometry() const;
  ::unprocessed::Geometry* _internal_mutable_geometry();

  public:
  // @@protoc_insertion_point(class_scope:unprocessed.Feature)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      32, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Feature_TagsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        tags_;
    ::unprocessed::Geometry* geometry_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};// -------------------------------------------------------------------

class Tile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:unprocessed.Tile) */ {
 public:
  inline Tile() : Tile(nullptr) {}
  ~Tile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Tile(::google::protobuf::internal::ConstantInitialized);

  inline Tile(const Tile& from)
      : Tile(nullptr, from) {}
  Tile(Tile&& from) noexcept
    : Tile() {
    *this = ::std::move(from);
  }

  inline Tile& operator=(const Tile& from) {
    CopyFrom(from);
    return *this;
  }
  inline Tile& operator=(Tile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Tile& default_instance() {
    return *internal_default_instance();
  }
  static inline const Tile* internal_default_instance() {
    return reinterpret_cast<const Tile*>(
               &_Tile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Tile& a, Tile& b) {
    a.Swap(&b);
  }
  inline void Swap(Tile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Tile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Tile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Tile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Tile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Tile& from) {
    Tile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Tile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "unprocessed.Tile";
  }
  protected:
  explicit Tile(::google::protobuf::Arena* arena);
  Tile(::google::protobuf::Arena* arena, const Tile& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeaturesFieldNumber = 4,
    kGroupsFieldNumber = 5,
    kZoomFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // repeated .unprocessed.Feature features = 4;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  ::unprocessed::Feature* mutable_features(int index);
  ::google::protobuf::RepeatedPtrField< ::unprocessed::Feature >*
      mutable_features();
  private:
  const ::google::protobuf::RepeatedPtrField<::unprocessed::Feature>& _internal_features() const;
  ::google::protobuf::RepeatedPtrField<::unprocessed::Feature>* _internal_mutable_features();
  public:
  const ::unprocessed::Feature& features(int index) const;
  ::unprocessed::Feature* add_features();
  const ::google::protobuf::RepeatedPtrField< ::unprocessed::Feature >&
      features() const;
  // repeated .unprocessed.Group groups = 5;
  int groups_size() const;
  private:
  int _internal_groups_size() const;

  public:
  void clear_groups() ;
  ::unprocessed::Group* mutable_groups(int index);
  ::google::protobuf::RepeatedPtrField< ::unprocessed::Group >*
      mutable_groups();
  private:
  const ::google::protobuf::RepeatedPtrField<::unprocessed::Group>& _internal_groups() const;
  ::google::protobuf::RepeatedPtrField<::unprocessed::Group>* _internal_mutable_groups();
  public:
  const ::unprocessed::Group& groups(int index) const;
  ::unprocessed::Group* add_groups();
  const ::google::protobuf::RepeatedPtrField< ::unprocessed::Group >&
      groups() const;
  // int32 zoom = 1;
  void clear_zoom() ;
  ::int32_t zoom() const;
  void set_zoom(::int32_t value);

  private:
  ::int32_t _internal_zoom() const;
  void _internal_set_zoom(::int32_t value);

  public:
  // int32 x = 2;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 3;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:unprocessed.Tile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::unprocessed::Feature > features_;
    ::google::protobuf::RepeatedPtrField< ::unprocessed::Group > groups_;
    ::int32_t zoom_;
    ::int32_t x_;
    ::int32_t y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};// -------------------------------------------------------------------

class TileGroup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:unprocessed.TileGroup) */ {
 public:
  inline TileGroup() : TileGroup(nullptr) {}
  ~TileGroup() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TileGroup(::google::protobuf::internal::ConstantInitialized);

  inline TileGroup(const TileGroup& from)
      : TileGroup(nullptr, from) {}
  TileGroup(TileGroup&& from) noexcept
    : TileGroup() {
    *this = ::std::move(from);
  }

  inline TileGroup& operator=(const TileGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TileGroup& operator=(TileGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TileGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const TileGroup* internal_default_instance() {
    return reinterpret_cast<const TileGroup*>(
               &_TileGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(TileGroup& a, TileGroup& b) {
    a.Swap(&b);
  }
  inline void Swap(TileGroup* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TileGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TileGroup* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TileGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TileGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TileGroup& from) {
    TileGroup::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TileGroup* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "unprocessed.TileGroup";
  }
  protected:
  explicit TileGroup(::google::protobuf::Arena* arena);
  TileGroup(::google::protobuf::Arena* arena, const TileGroup& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTilesFieldNumber = 4,
    kZoomFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // repeated .unprocessed.Tile tiles = 4;
  int tiles_size() const;
  private:
  int _internal_tiles_size() const;

  public:
  void clear_tiles() ;
  ::unprocessed::Tile* mutable_tiles(int index);
  ::google::protobuf::RepeatedPtrField< ::unprocessed::Tile >*
      mutable_tiles();
  private:
  const ::google::protobuf::RepeatedPtrField<::unprocessed::Tile>& _internal_tiles() const;
  ::google::protobuf::RepeatedPtrField<::unprocessed::Tile>* _internal_mutable_tiles();
  public:
  const ::unprocessed::Tile& tiles(int index) const;
  ::unprocessed::Tile* add_tiles();
  const ::google::protobuf::RepeatedPtrField< ::unprocessed::Tile >&
      tiles() const;
  // int32 zoom = 1;
  void clear_zoom() ;
  ::int32_t zoom() const;
  void set_zoom(::int32_t value);

  private:
  ::int32_t _internal_zoom() const;
  void _internal_set_zoom(::int32_t value);

  public:
  // int32 x = 2;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 3;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:unprocessed.TileGroup)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::unprocessed::Tile > tiles_;
    ::int32_t zoom_;
    ::int32_t x_;
    ::int32_t y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_unprocessed_5ftile_5fgroup_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Geometry_Point

// float lat = 1;
inline void Geometry_Point::clear_lat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lat_ = 0;
}
inline float Geometry_Point::lat() const {
  // @@protoc_insertion_point(field_get:unprocessed.Geometry.Point.lat)
  return _internal_lat();
}
inline void Geometry_Point::set_lat(float value) {
  _internal_set_lat(value);
  // @@protoc_insertion_point(field_set:unprocessed.Geometry.Point.lat)
}
inline float Geometry_Point::_internal_lat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lat_;
}
inline void Geometry_Point::_internal_set_lat(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lat_ = value;
}

// float lon = 2;
inline void Geometry_Point::clear_lon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lon_ = 0;
}
inline float Geometry_Point::lon() const {
  // @@protoc_insertion_point(field_get:unprocessed.Geometry.Point.lon)
  return _internal_lon();
}
inline void Geometry_Point::set_lon(float value) {
  _internal_set_lon(value);
  // @@protoc_insertion_point(field_set:unprocessed.Geometry.Point.lon)
}
inline float Geometry_Point::_internal_lon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lon_;
}
inline void Geometry_Point::_internal_set_lon(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lon_ = value;
}

// -------------------------------------------------------------------

// Geometry

// repeated .unprocessed.Geometry.Point points = 1;
inline int Geometry::_internal_points_size() const {
  return _internal_points().size();
}
inline int Geometry::points_size() const {
  return _internal_points_size();
}
inline void Geometry::clear_points() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.points_.Clear();
}
inline ::unprocessed::Geometry_Point* Geometry::mutable_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:unprocessed.Geometry.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Geometry_Point>* Geometry::mutable_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:unprocessed.Geometry.points)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_points();
}
inline const ::unprocessed::Geometry_Point& Geometry::points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:unprocessed.Geometry.points)
  return _internal_points().Get(index);
}
inline ::unprocessed::Geometry_Point* Geometry::add_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::unprocessed::Geometry_Point* _add = _internal_mutable_points()->Add();
  // @@protoc_insertion_point(field_add:unprocessed.Geometry.points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Geometry_Point>& Geometry::points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:unprocessed.Geometry.points)
  return _internal_points();
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Geometry_Point>&
Geometry::_internal_points() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.points_;
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Geometry_Point>*
Geometry::_internal_mutable_points() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.points_;
}

// bool is_closed = 2;
inline void Geometry::clear_is_closed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_closed_ = false;
}
inline bool Geometry::is_closed() const {
  // @@protoc_insertion_point(field_get:unprocessed.Geometry.is_closed)
  return _internal_is_closed();
}
inline void Geometry::set_is_closed(bool value) {
  _internal_set_is_closed(value);
  // @@protoc_insertion_point(field_set:unprocessed.Geometry.is_closed)
}
inline bool Geometry::_internal_is_closed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_closed_;
}
inline void Geometry::_internal_set_is_closed(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_closed_ = value;
}

// bool inner = 3;
inline void Geometry::clear_inner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.inner_ = false;
}
inline bool Geometry::inner() const {
  // @@protoc_insertion_point(field_get:unprocessed.Geometry.inner)
  return _internal_inner();
}
inline void Geometry::set_inner(bool value) {
  _internal_set_inner(value);
  // @@protoc_insertion_point(field_set:unprocessed.Geometry.inner)
}
inline bool Geometry::_internal_inner() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.inner_;
}
inline void Geometry::_internal_set_inner(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.inner_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Feature

// map<string, string> tags = 1;
inline int Feature::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int Feature::tags_size() const {
  return _internal_tags_size();
}
inline void Feature::clear_tags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tags_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Feature::_internal_tags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tags_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Feature::tags() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:unprocessed.Feature.tags)
  return _internal_tags();
}
inline ::google::protobuf::Map<std::string, std::string>* Feature::_internal_mutable_tags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.tags_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Feature::mutable_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:unprocessed.Feature.tags)
  return _internal_mutable_tags();
}

// .unprocessed.Geometry geometry = 2;
inline bool Feature::has_geometry() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.geometry_ != nullptr);
  return value;
}
inline void Feature::clear_geometry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.geometry_ != nullptr) _impl_.geometry_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::unprocessed::Geometry& Feature::_internal_geometry() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::unprocessed::Geometry* p = _impl_.geometry_;
  return p != nullptr ? *p : reinterpret_cast<const ::unprocessed::Geometry&>(::unprocessed::_Geometry_default_instance_);
}
inline const ::unprocessed::Geometry& Feature::geometry() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:unprocessed.Feature.geometry)
  return _internal_geometry();
}
inline void Feature::unsafe_arena_set_allocated_geometry(::unprocessed::Geometry* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.geometry_);
  }
  _impl_.geometry_ = reinterpret_cast<::unprocessed::Geometry*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:unprocessed.Feature.geometry)
}
inline ::unprocessed::Geometry* Feature::release_geometry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::unprocessed::Geometry* released = _impl_.geometry_;
  _impl_.geometry_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::unprocessed::Geometry* Feature::unsafe_arena_release_geometry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:unprocessed.Feature.geometry)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::unprocessed::Geometry* temp = _impl_.geometry_;
  _impl_.geometry_ = nullptr;
  return temp;
}
inline ::unprocessed::Geometry* Feature::_internal_mutable_geometry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.geometry_ == nullptr) {
    auto* p = CreateMaybeMessage<::unprocessed::Geometry>(GetArena());
    _impl_.geometry_ = reinterpret_cast<::unprocessed::Geometry*>(p);
  }
  return _impl_.geometry_;
}
inline ::unprocessed::Geometry* Feature::mutable_geometry() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::unprocessed::Geometry* _msg = _internal_mutable_geometry();
  // @@protoc_insertion_point(field_mutable:unprocessed.Feature.geometry)
  return _msg;
}
inline void Feature::set_allocated_geometry(::unprocessed::Geometry* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::unprocessed::Geometry*>(_impl_.geometry_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::unprocessed::Geometry*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.geometry_ = reinterpret_cast<::unprocessed::Geometry*>(value);
  // @@protoc_insertion_point(field_set_allocated:unprocessed.Feature.geometry)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Group

// map<string, string> tags = 1;
inline int Group::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int Group::tags_size() const {
  return _internal_tags_size();
}
inline void Group::clear_tags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tags_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Group::_internal_tags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tags_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Group::tags() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:unprocessed.Group.tags)
  return _internal_tags();
}
inline ::google::protobuf::Map<std::string, std::string>* Group::_internal_mutable_tags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.tags_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Group::mutable_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:unprocessed.Group.tags)
  return _internal_mutable_tags();
}

// repeated int32 feature_indices = 2;
inline int Group::_internal_feature_indices_size() const {
  return _internal_feature_indices().size();
}
inline int Group::feature_indices_size() const {
  return _internal_feature_indices_size();
}
inline void Group::clear_feature_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.feature_indices_.Clear();
}
inline ::int32_t Group::feature_indices(int index) const {
  // @@protoc_insertion_point(field_get:unprocessed.Group.feature_indices)
  return _internal_feature_indices().Get(index);
}
inline void Group::set_feature_indices(int index, ::int32_t value) {
  _internal_mutable_feature_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:unprocessed.Group.feature_indices)
}
inline void Group::add_feature_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_feature_indices()->Add(value);
  // @@protoc_insertion_point(field_add:unprocessed.Group.feature_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Group::feature_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:unprocessed.Group.feature_indices)
  return _internal_feature_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Group::mutable_feature_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:unprocessed.Group.feature_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_feature_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Group::_internal_feature_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.feature_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Group::_internal_mutable_feature_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.feature_indices_;
}

// -------------------------------------------------------------------

// Tile

// int32 zoom = 1;
inline void Tile::clear_zoom() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.zoom_ = 0;
}
inline ::int32_t Tile::zoom() const {
  // @@protoc_insertion_point(field_get:unprocessed.Tile.zoom)
  return _internal_zoom();
}
inline void Tile::set_zoom(::int32_t value) {
  _internal_set_zoom(value);
  // @@protoc_insertion_point(field_set:unprocessed.Tile.zoom)
}
inline ::int32_t Tile::_internal_zoom() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.zoom_;
}
inline void Tile::_internal_set_zoom(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.zoom_ = value;
}

// int32 x = 2;
inline void Tile::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline ::int32_t Tile::x() const {
  // @@protoc_insertion_point(field_get:unprocessed.Tile.x)
  return _internal_x();
}
inline void Tile::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:unprocessed.Tile.x)
}
inline ::int32_t Tile::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Tile::_internal_set_x(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// int32 y = 3;
inline void Tile::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline ::int32_t Tile::y() const {
  // @@protoc_insertion_point(field_get:unprocessed.Tile.y)
  return _internal_y();
}
inline void Tile::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:unprocessed.Tile.y)
}
inline ::int32_t Tile::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Tile::_internal_set_y(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// repeated .unprocessed.Feature features = 4;
inline int Tile::_internal_features_size() const {
  return _internal_features().size();
}
inline int Tile::features_size() const {
  return _internal_features_size();
}
inline void Tile::clear_features() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.features_.Clear();
}
inline ::unprocessed::Feature* Tile::mutable_features(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:unprocessed.Tile.features)
  return _internal_mutable_features()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Feature>* Tile::mutable_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:unprocessed.Tile.features)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_features();
}
inline const ::unprocessed::Feature& Tile::features(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:unprocessed.Tile.features)
  return _internal_features().Get(index);
}
inline ::unprocessed::Feature* Tile::add_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::unprocessed::Feature* _add = _internal_mutable_features()->Add();
  // @@protoc_insertion_point(field_add:unprocessed.Tile.features)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Feature>& Tile::features() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:unprocessed.Tile.features)
  return _internal_features();
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Feature>&
Tile::_internal_features() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.features_;
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Feature>*
Tile::_internal_mutable_features() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.features_;
}

// repeated .unprocessed.Group groups = 5;
inline int Tile::_internal_groups_size() const {
  return _internal_groups().size();
}
inline int Tile::groups_size() const {
  return _internal_groups_size();
}
inline void Tile::clear_groups() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.groups_.Clear();
}
inline ::unprocessed::Group* Tile::mutable_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:unprocessed.Tile.groups)
  return _internal_mutable_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Group>* Tile::mutable_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:unprocessed.Tile.groups)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_groups();
}
inline const ::unprocessed::Group& Tile::groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:unprocessed.Tile.groups)
  return _internal_groups().Get(index);
}
inline ::unprocessed::Group* Tile::add_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::unprocessed::Group* _add = _internal_mutable_groups()->Add();
  // @@protoc_insertion_point(field_add:unprocessed.Tile.groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Group>& Tile::groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:unprocessed.Tile.groups)
  return _internal_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Group>&
Tile::_internal_groups() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.groups_;
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Group>*
Tile::_internal_mutable_groups() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.groups_;
}

// -------------------------------------------------------------------

// TileGroup

// int32 zoom = 1;
inline void TileGroup::clear_zoom() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.zoom_ = 0;
}
inline ::int32_t TileGroup::zoom() const {
  // @@protoc_insertion_point(field_get:unprocessed.TileGroup.zoom)
  return _internal_zoom();
}
inline void TileGroup::set_zoom(::int32_t value) {
  _internal_set_zoom(value);
  // @@protoc_insertion_point(field_set:unprocessed.TileGroup.zoom)
}
inline ::int32_t TileGroup::_internal_zoom() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.zoom_;
}
inline void TileGroup::_internal_set_zoom(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.zoom_ = value;
}

// int32 x = 2;
inline void TileGroup::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline ::int32_t TileGroup::x() const {
  // @@protoc_insertion_point(field_get:unprocessed.TileGroup.x)
  return _internal_x();
}
inline void TileGroup::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:unprocessed.TileGroup.x)
}
inline ::int32_t TileGroup::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void TileGroup::_internal_set_x(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// int32 y = 3;
inline void TileGroup::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline ::int32_t TileGroup::y() const {
  // @@protoc_insertion_point(field_get:unprocessed.TileGroup.y)
  return _internal_y();
}
inline void TileGroup::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:unprocessed.TileGroup.y)
}
inline ::int32_t TileGroup::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void TileGroup::_internal_set_y(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// repeated .unprocessed.Tile tiles = 4;
inline int TileGroup::_internal_tiles_size() const {
  return _internal_tiles().size();
}
inline int TileGroup::tiles_size() const {
  return _internal_tiles_size();
}
inline void TileGroup::clear_tiles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tiles_.Clear();
}
inline ::unprocessed::Tile* TileGroup::mutable_tiles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:unprocessed.TileGroup.tiles)
  return _internal_mutable_tiles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Tile>* TileGroup::mutable_tiles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:unprocessed.TileGroup.tiles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tiles();
}
inline const ::unprocessed::Tile& TileGroup::tiles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:unprocessed.TileGroup.tiles)
  return _internal_tiles().Get(index);
}
inline ::unprocessed::Tile* TileGroup::add_tiles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::unprocessed::Tile* _add = _internal_mutable_tiles()->Add();
  // @@protoc_insertion_point(field_add:unprocessed.TileGroup.tiles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Tile>& TileGroup::tiles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:unprocessed.TileGroup.tiles)
  return _internal_tiles();
}
inline const ::google::protobuf::RepeatedPtrField<::unprocessed::Tile>&
TileGroup::_internal_tiles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tiles_;
}
inline ::google::protobuf::RepeatedPtrField<::unprocessed::Tile>*
TileGroup::_internal_mutable_tiles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tiles_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace unprocessed


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_unprocessed_5ftile_5fgroup_2eproto_2epb_2eh
